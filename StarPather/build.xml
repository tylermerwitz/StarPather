<?xml version="1.0"?>
<project name="StarPather" default="build" basedir="." >
	<property file="build.properties"/>
	<property name="lib.dir"      value="lib" />
	<property name="workspace"    location="../" />
	<property name="dist.dir"     value="dist" />
	<property name="build.dir"    value="build" />
	<property name="src.dir"      value="src" />
 
	
	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>

	<target name="build" depends="javac,jar">
		<antcall target="clean"/>
		  <echo>^^^^^^^^^     ~~~~~~~~~~~~~~~~~~~~~~~~</echo>
		  <echo>( o   o )    (      Wow It Builds!    )</echo>
		  <echo>{   ^   }  /  ~~~~~~~~~~~~~~~~~~~~~~~~</echo>
	      <echo> ( ~~~ ) </echo>
		  <echo>  ----- </echo>	  
	</target>
	
	<target name="prepare">
		<delete dir="${build.dir}"/>
		<mkdir  dir="${build.dir}"/>
		<mkdir dir="${dist.dir}"/>		
	</target>
	
	<target name="javac" depends="prepare">
		<unjar dest="${build.dir}">
			<fileset dir="${lib.dir}">
				<include name="swt.jar" />
			</fileset>
	    </unjar>

		<delete dir="${build.dir}/META-INF"/>

		<javac debug="true" srcdir = "${src.dir}" destdir = "${build.dir}">
			 
			<classpath>
			   <fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>		
		</javac>
	</target>

	<target name="jar">				
		<jar jarfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.dir}">
			<manifest>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Implementation-Title" value="${project.name}" />
				<attribute name="Main-Class" value="main.FrontEndWindow"/>
				<attribute name="Implementation-Version" value="${version.num}-build-${build.number}"/>   
				<attribute name="Built-Date" value="${TODAY}"/>       
			</manifest>
		</jar>	
		
		<chmod perm="777">
			<fileset dir="${dist.dir}">
    			<include name="*.jar"/>
			</fileset>
		</chmod>
		
		<copy file="${dist.dir}\${ant.project.name}.jar" tofile="${ant.project.name}.jar" verbose="true"  overwrite="true" /> 

	</target>

	<target name="grabDependencies">
	  <echo>There is no external dependencies</echo>
	  <echo>And internal lib project references (jargs jars) ex...</echo>
	  <echo>^^^^^^^^^     ~~~~~~~~~~~~~~~~~~~~~~~~</echo>
      <echo>( o   o )    (      No Poison Ivy!    )</echo>
	  <echo>{   ^   }  /  ~~~~~~~~~~~~~~~~~~~~~~~~</echo>
	  <echo> ( === ) </echo>
	  <echo>  ----- </echo>	  
	</target>
		
	<target name="deploy_to_workhorse">
		<copy file="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup.jar" tofile="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup2.jar" verbose="true"  overwrite="true" failonerror="false"/>
		<copy file="\\workhorse\convert\prog\${ant.project.name}.jar" tofile="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup.jar" verbose="true"  overwrite="true" failonerror="false"/>
		<copy file="${dist.dir}\${ant.project.name}.jar" tofile="\\workhorse\convert\prog\${ant.project.name}.jar" verbose="true"  overwrite="true" /> 
	</target>
	
	<target name="rollback">
		<copy file="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup.jar" tofile="\\workhorse\convert\prog\${ant.project.name}.jar" verbose="true"  overwrite="true" failonerror="false"/>
		<copy file="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup2.jar" tofile="\\workhorse\convert\prog\backup\${ant.project.name}\${ant.project.name}_backup.jar" verbose="true"  overwrite="true" failonerror="false"/>
	</target>

</project>
